{"meta":{"title":"2rever的前端小站","subtitle":null,"description":null,"author":"2rever","url":"https://2rever.cn"},"pages":[],"posts":[{"title":"js里的对象的深浅拷贝","slug":"js深浅拷贝","date":"2018-09-30T06:25:18.000Z","updated":"2018-10-10T04:46:20.701Z","comments":true,"path":"2018/09/30/js深浅拷贝/","link":"","permalink":"https://2rever.cn/2018/09/30/js深浅拷贝/","excerpt":"","text":"js里的对象的深浅拷贝js众所周知，js里面对象及其数组不是基本数据类型，当复制操作的时候我们不会复制一个值出来，而是复制一个对这个值的指向，当我们有复制对象需求的时候，可以借助lodash上相应的函数，或者使用一下方法实现。 浅拷贝指的是当对象有多层的时候只复制第一层，子对象还是复制的指向。 深拷贝指的是连同子对象都是一个全新的值。 浅拷贝 123456789function shallowCopy(src) &#123; var dst = &#123;&#125; for(var prop in src) &#123; if(src.hasOwnProperty(prop)) &#123; dst[prop] = src[prop] &#125; &#125; return dst&#125; 深拷贝 这种方式是最便捷的深拷贝方式，但是原型链会遭到破坏，原有对象的原型会丢失。 1JSON.parse(JSON.stringify(obj)) 自己实现深拷贝的方式可避免上述的问题12345678910111213141516171819function deepCopy(src) &#123; // 定义一个对象，用来确定当前的参数是数组还是对象 var objArray = Array.isArray(obj) ? [] : &#123;&#125; // 如果obj存在，且类型为对象 if (obj &amp;&amp; typeof obj === \"object\" ) &#123; for (key in obj) &#123; if (obj.hasOwnProperty(key)) &#123; // 如果obj的子元素是对象，递归操作 if (obj[key] &amp;&amp; typeof obj[key] === \"object\") &#123; objArray[key] = deepCopy(obj[key]) &#125;else &#123; // 如果不是，直接赋值 objArray[key] = obj[key] &#125; &#125; &#125; &#125; return objArray //返回新的对象&#125;","categories":[],"tags":[]},{"title":"这是我的第一篇文章","slug":"Hexo博客添加评论功能","date":"2018-08-12T04:02:06.000Z","updated":"2018-08-12T04:01:19.228Z","comments":true,"path":"2018/08/12/Hexo博客添加评论功能/","link":"","permalink":"https://2rever.cn/2018/08/12/Hexo博客添加评论功能/","excerpt":"","text":"Hexo博客添加valine评论功能增加评论功能我原来以为添加评论是一件很麻烦的事情，其实就是在LeanCloud上注册账号，获取appId和appKey，然后在themes目录下自己选用的主题目录下，找到_config.yml文件，找到valine字段，把下文xxx字段替换为valine官网上设置里面获取的值填进去就完了，由于本主题已经集成多种非后端评论系统，所以直接开箱即用。12valine_appId: xxxvaline_appKey: xxx","categories":[],"tags":[]}]}